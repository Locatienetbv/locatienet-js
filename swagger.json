{
  "openapi": "3.0.4",
  "info": {
    "title": "Locatienet API's",
    "description": "Go to your <a href=\"https://account.locatienet.com\">Account</a> to get your ApiKey",
    "contact": {
      "name": "Locatienet",
      "url": "https://locatienet.com/",
      "email": "info@locatienet.com"
    },
    "version": "1.0"
  },
  "servers": [
    {
      "url": "https://services.locatienet.com"
    }
  ],
  "paths": {
    "/rs/v1/Locate/searchByText": {
      "post": {
        "tags": [
          "Time&Distance",
          "Map&Route"
        ],
        "summary": "Search for locations using a free-form text input.",
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LocateSearchByText"
              },
              "example": {"text":"1012JS in Amsterdam","country":"NL"}
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Location"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/rs/v1/Locate/searchByAddress": {
      "post": {
        "tags": [
          "Time&Distance",
          "Map&Route"
        ],
        "summary": "Search for locations using structured address input.",
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LocateSearchByAddress"
              },
              "example": {"address":{"postcode":"1012JS","street":"Dam","houseNr":"1","city":"Amsterdam","country":"NL"}}
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Location"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/rs/v1/Locate/searchByPosition": {
      "post": {
        "tags": [
          "Map&Route"
        ],
        "summary": "Search for addresses using structured coordinate input.",
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LocateSearchByPosition"
              },
              "example": {"coordinate":{"x":4.892479,"y":52.373127}}
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Location"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/rs/v1/Route/calculateRouteInfo": {
      "post": {
        "tags": [
          "Time&Distance"
        ],
        "summary": "Calculates and returns basic route information and polyline.",
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RouteRequest"
              },
              "example": {"locations":[{"coordinate":{"x":4.9361100699,"y":52.40127179}},{"coordinate":{"x":4.4871601612,"y":51.91437912}}],"options":{"vehicle":"truckfast","optimization":"optimal","language":"nl"}}
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CalculateRouteInfoResponse"
                }
              }
            }
          }
        }
      }
    },
    "/rs/v1/Route/calculateRouteDescription": {
      "post": {
        "tags": [
          "Map&Route"
        ],
        "summary": "Calculates and returns basic route information, descriptions and polyline.",
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RouteRequest"
              },
              "example": {"locations":[{"coordinate":{"x":4.9361100699,"y":52.40127179}},{"coordinate":{"x":4.4871601612,"y":51.91437912}}],"options":{"vehicle":"truckfast","optimization":"optimal","language":"nl"}}
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CalculateRouteDescriptionResponse"
                }
              }
            }
          }
        }
      }
    },
    "/rs/v1/Map/renderMapTile": {
      "get": {
        "tags": [
          "Map&Route"
        ],
        "summary": "The required map section is described by its tile key. Use https://[tileserver|tile[0|1|2|3]].locatienet.com/{z}/{x}/{y}.png?apikey={your apikey}",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/rs/v1/Map/renderMapByBounds": {
      "post": {
        "tags": [
          "Map&Route"
        ],
        "summary": "The required map is described by its bounds..",
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MapRequestByBounds"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MapResponse"
                }
              }
            }
          }
        }
      }
    },
    "/rs/v1/Map/renderMapByCenter": {
      "post": {
        "tags": [
          "Map&Route"
        ],
        "summary": "The required map is described by its center coordinate and its zooming.",
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MapRequestByCenter"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MapResponse"
                }
              }
            }
          }
        }
      }
    },
    "/rs/v1/Traffic/features": {
      "post": {
        "tags": [
          "Traffic API"
        ],
        "summary": "A GeoJson feature collection with the current (dutch) traffic situation. Includes congestions and major roadworks",
        "requestBody": {
          "description": "Options such as language of the output",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TrafficOptions"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/rs/v1/Country/list": {
      "get": {
        "tags": [
          "Time&Distance",
          "Map&Route"
        ],
        "summary": "A list of available countries.",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Country"
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Address": {
        "type": "object",
        "properties": {
          "postcode": {
            "type": "string",
            "description": "The postal code of the address.",
            "nullable": true,
            "example": "1012JS"
          },
          "street": {
            "type": "string",
            "description": "The street name of the address",
            "nullable": true,
            "example": "Dam"
          },
          "houseNr": {
            "type": "string",
            "description": "The HouseNr of the address",
            "nullable": true,
            "example": ""
          },
          "district": {
            "type": "string",
            "description": "The district of the address, i.e. the entity below city.",
            "nullable": true,
            "example": "Amsterdam-Centrum"
          },
          "city": {
            "type": "string",
            "description": "The city of the address,",
            "nullable": true,
            "example": "Amsterdam"
          },
          "province": {
            "type": "string",
            "description": "The name of the principal country subdivision which the address belongs to",
            "nullable": true,
            "example": "Noord-Holland"
          },
          "country": {
            "type": "string",
            "description": "Country code according to ISO 3166-1 alpha-2. Defaults to NL. The search will be restricted to this country. When empty, all countries contained in the geocoding data will be included in the search.",
            "nullable": true,
            "example": "NL"
          }
        },
        "additionalProperties": false,
        "description": "Represents the address of a geographical object. Where a string, such as a city or street name, is available in multiple languages, it is returned in the default language specified by the object's location, i.e. in which country it is located. Because addressing schemes vary strongly between countries, most fields are optional."
      },
      "BoundingBox": {
        "type": "object",
        "properties": {
          "minX": {
            "type": "number",
            "description": "Minimum value for x dimension. The numerical value has to be less than or equal to maxX.",
            "format": "double",
            "example": 4.772248
          },
          "maxY": {
            "type": "number",
            "description": "Maximum value for x dimension. The numerical value has to be greater than or equal to minX.",
            "format": "double",
            "example": 52.439472
          },
          "maxX": {
            "type": "number",
            "description": "Minimum value for y dimension. The numerical value has to be less than or equal to maxY.",
            "format": "double",
            "example": 5.013947
          },
          "minY": {
            "type": "number",
            "description": "Maximum value for y dimension. The numerical value has to be greater than or equal to minY.",
            "format": "double",
            "example": 52.321274
          }
        },
        "additionalProperties": false,
        "description": "Boundaries are used for defining the minimal boundary rectangle of a geographical object. It contains the minimum and maximum values for x and y dimension."
      },
      "CalculateRouteDescriptionResponse": {
        "type": "object",
        "properties": {
          "distance": {
            "type": "number",
            "description": "The distance of the complete route.",
            "format": "double"
          },
          "travelTime": {
            "type": "number",
            "description": "The travel time for the complete route.",
            "format": "double"
          },
          "trafficDelay": {
            "type": "number",
            "description": "The total delay due to traffic incidents(traffic jams, construction sites etc.) on the route.",
            "format": "double",
            "nullable": true
          },
          "waypoints": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Location"
            },
            "nullable": true
          },
          "descriptions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RouteDescription"
            },
            "description": "List of descriptions describing the route",
            "nullable": true
          },
          "polyline": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Coordinate"
            },
            "description": "List of coordinates of the polyline of the route",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CalculateRouteInfoResponse": {
        "type": "object",
        "properties": {
          "distance": {
            "type": "number",
            "description": "The distance of the complete route.",
            "format": "double"
          },
          "travelTime": {
            "type": "number",
            "description": "The travel time for the complete route.",
            "format": "double"
          },
          "trafficDelay": {
            "type": "number",
            "description": "The total delay due to traffic incidents(traffic jams, construction sites etc.) on the route.",
            "format": "double",
            "nullable": true
          },
          "waypoints": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Location"
            },
            "nullable": true
          },
          "polyline": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Coordinate"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Coordinate": {
        "type": "object",
        "properties": {
          "x": {
            "type": "number",
            "description": "The value in x-direction (west to east), longitude for WGS84.",
            "format": "double",
            "example": 4.892479
          },
          "y": {
            "type": "number",
            "description": "The value in y-direction (south to north), latitude for WGS84.",
            "format": "double",
            "example": 52.373127
          }
        },
        "additionalProperties": false,
        "description": "A coordinate is defined by its x and y values, specifying the geographical point in a two-dimensional coordinate system"
      },
      "Country": {
        "type": "object",
        "properties": {
          "value": {
            "type": "string",
            "nullable": true
          },
          "iso2": {
            "type": "string",
            "nullable": true
          },
          "iso3": {
            "type": "string",
            "nullable": true
          },
          "lang": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "nullable": true
          },
          "bBox": {
            "$ref": "#/components/schemas/BoundingBox"
          }
        },
        "additionalProperties": false
      },
      "CountryType": {
        "enum": [
          "ISO31661ALPHA2",
          "ISO31661ALPHA3",
          "LICENSEPLATE",
          "NAME"
        ],
        "type": "string",
        "description": "Defines values for CountryType."
      },
      "ImageFormat": {
        "enum": [
          "PNG",
          "JPG"
        ],
        "type": "string",
        "description": "Defines values for ImageFormat."
      },
      "LocateOptions": {
        "type": "object",
        "properties": {
          "language": {
            "type": "string",
            "description": "The language used for geographic names. Defaults to nl. This standard allows to use two-letter ISO 639-1 codes",
            "nullable": true,
            "example": "nl"
          },
          "numResults": {
            "type": "integer",
            "description": "Limit the number of resulting locations (default 5)",
            "format": "int32",
            "nullable": true
          },
          "minimalResultScore": {
            "type": "integer",
            "description": "Minimal score of the results (default 70)",
            "format": "int32",
            "nullable": true
          },
          "outputCountryType": {
            "$ref": "#/components/schemas/CountryType"
          }
        },
        "additionalProperties": false
      },
      "LocateSearchByAddress": {
        "type": "object",
        "properties": {
          "address": {
            "$ref": "#/components/schemas/Address"
          },
          "options": {
            "$ref": "#/components/schemas/LocateOptions"
          }
        },
        "additionalProperties": false
      },
      "LocateSearchByPosition": {
        "type": "object",
        "properties": {
          "coordinate": {
            "$ref": "#/components/schemas/Coordinate"
          },
          "options": {
            "$ref": "#/components/schemas/LocateOptions"
          }
        },
        "additionalProperties": false
      },
      "LocateSearchByText": {
        "type": "object",
        "properties": {
          "text": {
            "type": "string",
            "description": "The input address.",
            "nullable": true,
            "example": "Amsterdam"
          },
          "country": {
            "type": "string",
            "description": "Country code according to ISO 3166-1 alpha-2. Defaults to NL. The search will be restricted to this country. When empty, all countries contained in the geocoding data will be included in the search.",
            "nullable": true,
            "example": "NL"
          },
          "options": {
            "$ref": "#/components/schemas/LocateOptions"
          }
        },
        "additionalProperties": false
      },
      "Location": {
        "type": "object",
        "properties": {
          "postcode": {
            "type": "string",
            "description": "The postal code of the address.",
            "nullable": true,
            "example": "1012JS"
          },
          "street": {
            "type": "string",
            "description": "The street name of the address",
            "nullable": true,
            "example": "Dam"
          },
          "houseNr": {
            "type": "string",
            "description": "The HouseNr of the address",
            "nullable": true,
            "example": ""
          },
          "district": {
            "type": "string",
            "description": "The district of the address, i.e. the entity below city.",
            "nullable": true,
            "example": "Amsterdam-Centrum"
          },
          "city": {
            "type": "string",
            "description": "The city of the address,",
            "nullable": true,
            "example": "Amsterdam"
          },
          "province": {
            "type": "string",
            "description": "The name of the principal country subdivision which the address belongs to",
            "nullable": true,
            "example": "Noord-Holland"
          },
          "country": {
            "type": "string",
            "description": "Country code according to ISO 3166-1 alpha-2. Defaults to NL. The search will be restricted to this country. When empty, all countries contained in the geocoding data will be included in the search.",
            "nullable": true,
            "example": "NL"
          },
          "coordinate": {
            "$ref": "#/components/schemas/Coordinate"
          },
          "score": {
            "type": "integer",
            "description": "Indicates the overall match quality for a geocoding request. 100 (percent) represents a perfect match between the input and the result.",
            "format": "int32",
            "example": 100
          },
          "distance": {
            "type": "number",
            "description": "A radius that specifies how close the route shall pass by the specified coordinate, only to be used with via waypoints. This radius refers to the distance on the road network in meters.\r\nWhen set there is no output waypoint. The route passes near the specified coordinate.",
            "format": "double",
            "nullable": true
          },
          "description": {
            "type": "string",
            "description": "A single string representing the address, typically consisting of the street, house number, postal code, city, and country. The precise format may differ based on what is appropriate for the address.",
            "nullable": true,
            "example": "Dam, 1012JS Amsterdam-Centrum Amsterdam"
          }
        },
        "additionalProperties": false,
        "description": "Represents a geographical object in terms of its position and its address."
      },
      "ManeuverType": {
        "enum": [
          "START",
          "STARTLEFT",
          "STARTRIGHT",
          "ARRIVE",
          "ARRIVELEFT",
          "ARRIVERIGHT",
          "CONTINUE",
          "KEEPSTRAIGHT",
          "KEEPLEFT",
          "KEEPRIGHT",
          "TURNHALFLEFT",
          "TURNLEFT",
          "TURNSHARPLEFT",
          "TURNHALFRIGHT",
          "TURNRIGHT",
          "TURNSHARPRIGHT",
          "MAKEUTURN",
          "TAKEROUNDABOUTLEFT",
          "TAKEROUNDABOUTRIGHT",
          "TAKECOMBINEDTRANSPORT",
          "ENTER",
          "ENTERLEFT",
          "ENTERRIGHT",
          "EXIT",
          "EXITLEFT",
          "EXITRIGHT",
          "CHANGE",
          "CHANGELEFT",
          "CHANGERIGHT"
        ],
        "type": "string",
        "description": "Defines values for ManeuverType."
      },
      "MapImageOptions": {
        "type": "object",
        "properties": {
          "width": {
            "type": "integer",
            "description": "The height of the image in physical pixel. The maximum allowed value is 8192.",
            "format": "int32",
            "example": 400
          },
          "height": {
            "type": "integer",
            "description": "The width of the image in physical pixel. The maximum allowed value is 8192.",
            "format": "int32",
            "example": 300
          },
          "imageFormat": {
            "$ref": "#/components/schemas/ImageFormat"
          }
        },
        "additionalProperties": false
      },
      "MapMapOptions": {
        "type": "object",
        "properties": {
          "language": {
            "type": "string",
            "description": "The language of texts on the rendered map. Defaults to nl. This standard allows to use two-letter ISO 639-1 codes",
            "nullable": true,
            "example": "nl"
          }
        },
        "additionalProperties": false
      },
      "MapRequestByBounds": {
        "type": "object",
        "properties": {
          "imageOptions": {
            "$ref": "#/components/schemas/MapImageOptions"
          },
          "mapOptions": {
            "$ref": "#/components/schemas/MapMapOptions"
          },
          "bounds": {
            "$ref": "#/components/schemas/BoundingBox"
          }
        },
        "additionalProperties": false
      },
      "MapRequestByCenter": {
        "type": "object",
        "properties": {
          "imageOptions": {
            "$ref": "#/components/schemas/MapImageOptions"
          },
          "mapOptions": {
            "$ref": "#/components/schemas/MapMapOptions"
          },
          "center": {
            "$ref": "#/components/schemas/Coordinate"
          },
          "zoom": {
            "type": "integer",
            "description": "The geographical resolution at which to display the map, where zoom 0 corresponds to a map of the Earth fully zoomed out, and larger zoom levels zoom in at a higher resolution. Offering a map of the entire Earth as a single image would either require an immense map, or a small map with very low resolution. As a result, map images are broken up into map 'tiles' and 'zoom levels'. At low zoom levels, a small set of map tiles covers a wide area; at higher zoom levels, the tiles are of higher resolution and cover a smaller area. Fractional values are allowed. The zoom is currently restricted to the range 0..22. Range: 0 ≤ value.",
            "format": "int32",
            "example": 12
          }
        },
        "additionalProperties": false
      },
      "MapResponse": {
        "type": "object",
        "properties": {
          "image": {
            "type": "string",
            "description": "The image as a byte array.",
            "format": "byte",
            "nullable": true
          },
          "bounds": {
            "$ref": "#/components/schemas/BoundingBox"
          },
          "zoom": {
            "type": "number",
            "description": "The zoom level of the map image.",
            "format": "double"
          }
        },
        "additionalProperties": false
      },
      "RoadEvent": {
        "enum": [
          "WAYPOINT",
          "FERRY",
          "TRAIN",
          "BORDER",
          "TOLL"
        ],
        "type": "string"
      },
      "RouteDescription": {
        "type": "object",
        "properties": {
          "accDistance": {
            "type": "number",
            "description": "The distance of the route from the start up to this description.",
            "format": "double"
          },
          "accTime": {
            "type": "number",
            "description": "The travel time for the route from the start up to this event.",
            "format": "double"
          },
          "description": {
            "type": "string",
            "description": "A descriptive text for the current maneuver.",
            "nullable": true
          },
          "directions": {
            "type": "string",
            "description": "The city names and road numbers on a signpost at the current location to follow for the current maneuver.",
            "nullable": true
          },
          "roadName": {
            "type": "string",
            "description": "The name of the current road",
            "nullable": true
          },
          "roadNumber": {
            "type": "string",
            "description": "The road number",
            "nullable": true
          },
          "networkClass": {
            "type": "integer",
            "description": "Defines the network class of a road. The road segments are divided into eight network classes by importance of the roads they represent. The network class 0 represents the most important roads, for example highways, while road segments of network class 7 are the least important roads, for example pedestrian paths. Range: 0 ≤ value ≤ 7.",
            "format": "int32",
            "nullable": true
          },
          "maneuverType": {
            "$ref": "#/components/schemas/ManeuverType"
          },
          "event": {
            "$ref": "#/components/schemas/RoadEvent"
          },
          "country": {
            "type": "string",
            "nullable": true
          },
          "coordinate": {
            "$ref": "#/components/schemas/Coordinate"
          }
        },
        "additionalProperties": false
      },
      "RouteOptimization": {
        "enum": [
          "shortest",
          "optimal",
          "fastest"
        ],
        "type": "string"
      },
      "RouteOptions": {
        "type": "object",
        "properties": {
          "vehicle": {
            "$ref": "#/components/schemas/VehicleType"
          },
          "optimization": {
            "$ref": "#/components/schemas/RouteOptimization"
          },
          "language": {
            "type": "string",
            "description": "The language of texts such as maneuver or traffic-incident descriptions. Defaults to nl. This standard allows to use two-letter ISO 639-1 codes",
            "nullable": true,
            "example": "nl"
          },
          "avoidHighways": {
            "type": "boolean",
            "description": "Force the routing algorithm to avoid freeways",
            "example": false
          },
          "avoidToll": {
            "type": "boolean",
            "description": "Force the routing algorithm to avoid tollroads",
            "example": false
          },
          "avoidFerry": {
            "type": "boolean",
            "description": "Force the routing algorithm to avoid ferries",
            "example": false
          },
          "avoidTrafficIncidents": {
            "type": "boolean",
            "description": "Force the routing algorithm to avoid current traffic",
            "example": false
          },
          "avoidEmissionZones": {
            "type": "boolean",
            "description": "Force the routing algorithm to avoid emissionzones",
            "example": false
          },
          "referenceTime": {
            "type": "string",
            "format": "date-time"
          },
          "timeConsiderationType": {
            "$ref": "#/components/schemas/TimeConsiderationType"
          },
          "includePolyline": {
            "type": "boolean",
            "description": "Include the polyline of the route. The polyline is a list of sequential coordinates of roadnodes",
            "example": false
          }
        },
        "additionalProperties": false
      },
      "RouteRequest": {
        "type": "object",
        "properties": {
          "locations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Location"
            },
            "description": "A list of sequential locations",
            "nullable": true
          },
          "options": {
            "$ref": "#/components/schemas/RouteOptions"
          }
        },
        "additionalProperties": false
      },
      "TimeConsiderationType": {
        "enum": [
          "Snapshot",
          "ExactAtArrival",
          "ExactAtStart"
        ],
        "type": "string"
      },
      "TrafficOptions": {
        "type": "object",
        "properties": {
          "countries": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "list of countries to include in the traffic information (currently only Dutch and Belgium traffic information is available)",
            "nullable": true,
            "example": [
              "NL"
            ]
          },
          "language": {
            "type": "string",
            "description": "The language used for geographic names. Defaults to nl. This standard allows to use two-letter ISO 639-1 codes",
            "nullable": true,
            "example": "nl"
          }
        },
        "additionalProperties": false
      },
      "VehicleType": {
        "enum": [
          "car",
          "carfast",
          "carslow",
          "van",
          "vanslow",
          "boxtruck",
          "truckfast",
          "truckslow",
          "bicycle",
          "pedestrian"
        ],
        "type": "string"
      }
    },
    "securitySchemes": {
      "X-API-KEY": {
        "type": "apiKey",
        "description": "X-API-KEY must appear in header",
        "name": "X-API-KEY",
        "in": "header"
      },
      "apikey": {
        "type": "apiKey",
        "description": "apikey must appear in query",
        "name": "apikey",
        "in": "query"
      }
    }
  },
  "security": [
    {
      "X-API-KEY": [ ]
    },
    {
      "apikey": [ ]
    }
  ],
  "tags": [
    {
      "name": "Time&Distance",
      "description": "Solution for determining distances and travel time."
    },
    {
      "name": "Map&Route",
      "description": "Solution for creating maps and route descriptions"
    },
    {
      "name": "Traffic API",
      "description": "Traffic information"
    }
  ]
}